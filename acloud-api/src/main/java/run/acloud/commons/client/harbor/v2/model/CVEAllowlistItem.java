/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v2.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * The item in CVE allowlist
 */
@Schema(description = "The item in CVE allowlist")
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-22T08:06:19.711Z")
public class CVEAllowlistItem {
  @SerializedName("cve_id")
  private String cveId = null;

  public CVEAllowlistItem cveId(String cveId) {
    this.cveId = cveId;
    return this;
  }

   /**
   * The ID of the CVE, such as \&quot;CVE-2019-10164\&quot;
   * @return cveId
  **/
  @Schema(description = "The ID of the CVE, such as 'CVE-2019-10164'")
  public String getCveId() {
    return cveId;
  }

  public void setCveId(String cveId) {
    this.cveId = cveId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CVEAllowlistItem cvEAllowlistItem = (CVEAllowlistItem) o;
    return Objects.equals(this.cveId, cvEAllowlistItem.cveId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cveId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CVEAllowlistItem {\n");
    
    sb.append("    cveId: ").append(toIndentedString(cveId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

