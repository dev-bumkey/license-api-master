/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;


@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T09:10:54.107Z")
public class RetentionExecution {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("policy_id")
  private Long policyId = null;

  @SerializedName("start_time")
  private String startTime = null;

  @SerializedName("end_time")
  private String endTime = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("trigger")
  private String trigger = null;

  @SerializedName("dry_run")
  private Boolean dryRun = null;

  public RetentionExecution id(Long id) {
    this.id = id;
    return this;
  }


  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public RetentionExecution policyId(Long policyId) {
    this.policyId = policyId;
    return this;
  }


  @Schema(description = "")
  public Long getPolicyId() {
    return policyId;
  }

  public void setPolicyId(Long policyId) {
    this.policyId = policyId;
  }

  public RetentionExecution startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }


  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public RetentionExecution endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }


  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public RetentionExecution status(String status) {
    this.status = status;
    return this;
  }


  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public RetentionExecution trigger(String trigger) {
    this.trigger = trigger;
    return this;
  }


  @Schema(description = "")
  public String getTrigger() {
    return trigger;
  }

  public void setTrigger(String trigger) {
    this.trigger = trigger;
  }

  public RetentionExecution dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }


  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetentionExecution retentionExecution = (RetentionExecution) o;
    return Objects.equals(this.id, retentionExecution.id) &&
        Objects.equals(this.policyId, retentionExecution.policyId) &&
        Objects.equals(this.startTime, retentionExecution.startTime) &&
        Objects.equals(this.endTime, retentionExecution.endTime) &&
        Objects.equals(this.status, retentionExecution.status) &&
        Objects.equals(this.trigger, retentionExecution.trigger) &&
        Objects.equals(this.dryRun, retentionExecution.dryRun);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, policyId, startTime, endTime, status, trigger, dryRun);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetentionExecution {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

