/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;


@Schema(description = "The webhook job.")
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T09:10:54.107Z")
public class WebhookJob {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("policy_id")
  private Long policyId = null;

  @SerializedName("event_type")
  private String eventType = null;

  @SerializedName("notify_type")
  private String notifyType = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("job_detail")
  private String jobDetail = null;

  @SerializedName("creation_time")
  private String creationTime = null;

  @SerializedName("update_time")
  private String updateTime = null;

  public WebhookJob id(Long id) {
    this.id = id;
    return this;
  }


  @Schema(description = "The webhook job ID.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public WebhookJob policyId(Long policyId) {
    this.policyId = policyId;
    return this;
  }


  @Schema(description = "The webhook policy ID.")
  public Long getPolicyId() {
    return policyId;
  }

  public void setPolicyId(Long policyId) {
    this.policyId = policyId;
  }

  public WebhookJob eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }


  @Schema(description = "The webhook job event type.")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public WebhookJob notifyType(String notifyType) {
    this.notifyType = notifyType;
    return this;
  }


  @Schema(description = "The webhook job notify type.")
  public String getNotifyType() {
    return notifyType;
  }

  public void setNotifyType(String notifyType) {
    this.notifyType = notifyType;
  }

  public WebhookJob status(String status) {
    this.status = status;
    return this;
  }


  @Schema(description = "The webhook job status.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public WebhookJob jobDetail(String jobDetail) {
    this.jobDetail = jobDetail;
    return this;
  }


  @Schema(description = "The webhook job notify detailed data.")
  public String getJobDetail() {
    return jobDetail;
  }

  public void setJobDetail(String jobDetail) {
    this.jobDetail = jobDetail;
  }

  public WebhookJob creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }


  @Schema(description = "The webhook job creation time.")
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public WebhookJob updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }


  @Schema(description = "The webhook job update time.")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookJob webhookJob = (WebhookJob) o;
    return Objects.equals(this.id, webhookJob.id) &&
        Objects.equals(this.policyId, webhookJob.policyId) &&
        Objects.equals(this.eventType, webhookJob.eventType) &&
        Objects.equals(this.notifyType, webhookJob.notifyType) &&
        Objects.equals(this.status, webhookJob.status) &&
        Objects.equals(this.jobDetail, webhookJob.jobDetail) &&
        Objects.equals(this.creationTime, webhookJob.creationTime) &&
        Objects.equals(this.updateTime, webhookJob.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, policyId, eventType, notifyType, status, jobDetail, creationTime, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookJob {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    notifyType: ").append(toIndentedString(notifyType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    jobDetail: ").append(toIndentedString(jobDetail)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

