/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;


@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T09:10:54.107Z")
public class RobotAccountAccess {
  @SerializedName("resource")
  private String resource = null;

  @SerializedName("action")
  private String action = null;

  public RobotAccountAccess resource(String resource) {
    this.resource = resource;
    return this;
  }


  @Schema(description = "the resource of harbor")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public RobotAccountAccess action(String action) {
    this.action = action;
    return this;
  }


  @Schema(description = "the action to resource that perdefined in harbor rbac")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RobotAccountAccess robotAccountAccess = (RobotAccountAccess) o;
    return Objects.equals(this.resource, robotAccountAccess.resource) &&
        Objects.equals(this.action, robotAccountAccess.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, action);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RobotAccountAccess {\n");
    
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

