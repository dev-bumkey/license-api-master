/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;


@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T09:10:54.107Z")
public class ConfigurationsResponse {
  @SerializedName("auth_mode")
  private StringConfigItem authMode = null;

  @SerializedName("count_per_project")
  private IntegerConfigItem countPerProject = null;

  @SerializedName("email_from")
  private StringConfigItem emailFrom = null;

  @SerializedName("email_host")
  private StringConfigItem emailHost = null;

  @SerializedName("email_port")
  private IntegerConfigItem emailPort = null;

  @SerializedName("email_identity")
  private StringConfigItem emailIdentity = null;

  @SerializedName("email_username")
  private StringConfigItem emailUsername = null;

  @SerializedName("email_ssl")
  private BoolConfigItem emailSsl = null;

  @SerializedName("email_insecure")
  private BoolConfigItem emailInsecure = null;

  @SerializedName("ldap_url")
  private StringConfigItem ldapUrl = null;

  @SerializedName("ldap_base_dn")
  private StringConfigItem ldapBaseDn = null;

  @SerializedName("ldap_filter")
  private StringConfigItem ldapFilter = null;

  @SerializedName("ldap_scope")
  private Integer ldapScope = null;

  @SerializedName("ldap_uid")
  private StringConfigItem ldapUid = null;

  @SerializedName("ldap_search_dn")
  private String ldapSearchDn = null;

  @SerializedName("ldap_timeout")
  private IntegerConfigItem ldapTimeout = null;

  @SerializedName("ldap_group_attribute_name")
  private StringConfigItem ldapGroupAttributeName = null;

  @SerializedName("ldap_group_base_dn")
  private StringConfigItem ldapGroupBaseDn = null;

  @SerializedName("ldap_group_search_filter")
  private StringConfigItem ldapGroupSearchFilter = null;

  @SerializedName("ldap_group_search_scope")
  private IntegerConfigItem ldapGroupSearchScope = null;

  @SerializedName("ldap_group_admin_dn")
  private StringConfigItem ldapGroupAdminDn = null;

  @SerializedName("oidc_client_id")
  private StringConfigItem oidcClientId = null;

  @SerializedName("oidc_endpoint")
  private StringConfigItem oidcEndpoint = null;

  @SerializedName("oidc_name")
  private StringConfigItem oidcName = null;

  @SerializedName("oidc_scope")
  private StringConfigItem oidcScope = null;

  @SerializedName("oidc_verify_cert")
  private BoolConfigItem oidcVerifyCert = null;

  @SerializedName("project_creation_restriction")
  private StringConfigItem projectCreationRestriction = null;

  @SerializedName("quota_per_project_enable")
  private BoolConfigItem quotaPerProjectEnable = null;

  @SerializedName("read_only")
  private BoolConfigItem readOnly = null;

  @SerializedName("self_registration")
  private BoolConfigItem selfRegistration = null;

  @SerializedName("storage_per_project")
  private IntegerConfigItem storagePerProject = null;

  @SerializedName("token_expiration")
  private IntegerConfigItem tokenExpiration = null;

  @SerializedName("verify_remote_cert")
  private BoolConfigItem verifyRemoteCert = null;

  @SerializedName("scan_all_policy")
  private Object scanAllPolicy = null;

  public ConfigurationsResponse authMode(StringConfigItem authMode) {
    this.authMode = authMode;
    return this;
  }


  @Schema(description = "The auth mode of current system, such as 'db_auth', 'ldap_auth'")
  public StringConfigItem getAuthMode() {
    return authMode;
  }

  public void setAuthMode(StringConfigItem authMode) {
    this.authMode = authMode;
  }

  public ConfigurationsResponse countPerProject(IntegerConfigItem countPerProject) {
    this.countPerProject = countPerProject;
    return this;
  }


  @Schema(description = "The default count quota for the new created projects.")
  public IntegerConfigItem getCountPerProject() {
    return countPerProject;
  }

  public void setCountPerProject(IntegerConfigItem countPerProject) {
    this.countPerProject = countPerProject;
  }

  public ConfigurationsResponse emailFrom(StringConfigItem emailFrom) {
    this.emailFrom = emailFrom;
    return this;
  }


  @Schema(description = "The sender name for Email notification.")
  public StringConfigItem getEmailFrom() {
    return emailFrom;
  }

  public void setEmailFrom(StringConfigItem emailFrom) {
    this.emailFrom = emailFrom;
  }

  public ConfigurationsResponse emailHost(StringConfigItem emailHost) {
    this.emailHost = emailHost;
    return this;
  }


  @Schema(description = "The hostname of SMTP server that sends Email notification.")
  public StringConfigItem getEmailHost() {
    return emailHost;
  }

  public void setEmailHost(StringConfigItem emailHost) {
    this.emailHost = emailHost;
  }

  public ConfigurationsResponse emailPort(IntegerConfigItem emailPort) {
    this.emailPort = emailPort;
    return this;
  }


  @Schema(description = "The port of SMTP server.")
  public IntegerConfigItem getEmailPort() {
    return emailPort;
  }

  public void setEmailPort(IntegerConfigItem emailPort) {
    this.emailPort = emailPort;
  }

  public ConfigurationsResponse emailIdentity(StringConfigItem emailIdentity) {
    this.emailIdentity = emailIdentity;
    return this;
  }


  @Schema(description = "By default it's empty so the email_username is picked.")
  public StringConfigItem getEmailIdentity() {
    return emailIdentity;
  }

  public void setEmailIdentity(StringConfigItem emailIdentity) {
    this.emailIdentity = emailIdentity;
  }

  public ConfigurationsResponse emailUsername(StringConfigItem emailUsername) {
    this.emailUsername = emailUsername;
    return this;
  }


  @Schema(description = "The username for authenticate against SMTP server.")
  public StringConfigItem getEmailUsername() {
    return emailUsername;
  }

  public void setEmailUsername(StringConfigItem emailUsername) {
    this.emailUsername = emailUsername;
  }

  public ConfigurationsResponse emailSsl(BoolConfigItem emailSsl) {
    this.emailSsl = emailSsl;
    return this;
  }


  @Schema(description = "When it's set to true the system will access Email server via TLS by default.  If it's set to false, it still will handle 'STARTTLS' from server side.")
  public BoolConfigItem getEmailSsl() {
    return emailSsl;
  }

  public void setEmailSsl(BoolConfigItem emailSsl) {
    this.emailSsl = emailSsl;
  }

  public ConfigurationsResponse emailInsecure(BoolConfigItem emailInsecure) {
    this.emailInsecure = emailInsecure;
    return this;
  }


  @Schema(description = "Whether or not the certificate will be verified when Harbor tries to access the email server.")
  public BoolConfigItem getEmailInsecure() {
    return emailInsecure;
  }

  public void setEmailInsecure(BoolConfigItem emailInsecure) {
    this.emailInsecure = emailInsecure;
  }

  public ConfigurationsResponse ldapUrl(StringConfigItem ldapUrl) {
    this.ldapUrl = ldapUrl;
    return this;
  }


  @Schema(description = "The URL of LDAP server.")
  public StringConfigItem getLdapUrl() {
    return ldapUrl;
  }

  public void setLdapUrl(StringConfigItem ldapUrl) {
    this.ldapUrl = ldapUrl;
  }

  public ConfigurationsResponse ldapBaseDn(StringConfigItem ldapBaseDn) {
    this.ldapBaseDn = ldapBaseDn;
    return this;
  }


  @Schema(description = "The Base DN for LDAP binding.")
  public StringConfigItem getLdapBaseDn() {
    return ldapBaseDn;
  }

  public void setLdapBaseDn(StringConfigItem ldapBaseDn) {
    this.ldapBaseDn = ldapBaseDn;
  }

  public ConfigurationsResponse ldapFilter(StringConfigItem ldapFilter) {
    this.ldapFilter = ldapFilter;
    return this;
  }


  @Schema(description = "The filter for LDAP binding.")
  public StringConfigItem getLdapFilter() {
    return ldapFilter;
  }

  public void setLdapFilter(StringConfigItem ldapFilter) {
    this.ldapFilter = ldapFilter;
  }

  public ConfigurationsResponse ldapScope(Integer ldapScope) {
    this.ldapScope = ldapScope;
    return this;
  }


  @Schema(description = "0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE")
  public Integer getLdapScope() {
    return ldapScope;
  }

  public void setLdapScope(Integer ldapScope) {
    this.ldapScope = ldapScope;
  }

  public ConfigurationsResponse ldapUid(StringConfigItem ldapUid) {
    this.ldapUid = ldapUid;
    return this;
  }


  @Schema(description = "The attribute which is used as identity for the LDAP binding, such as 'CN' or 'SAMAccountname'")
  public StringConfigItem getLdapUid() {
    return ldapUid;
  }

  public void setLdapUid(StringConfigItem ldapUid) {
    this.ldapUid = ldapUid;
  }

  public ConfigurationsResponse ldapSearchDn(String ldapSearchDn) {
    this.ldapSearchDn = ldapSearchDn;
    return this;
  }


  @Schema(description = "The DN of the user to do the search.")
  public String getLdapSearchDn() {
    return ldapSearchDn;
  }

  public void setLdapSearchDn(String ldapSearchDn) {
    this.ldapSearchDn = ldapSearchDn;
  }

  public ConfigurationsResponse ldapTimeout(IntegerConfigItem ldapTimeout) {
    this.ldapTimeout = ldapTimeout;
    return this;
  }


  @Schema(description = "timeout in seconds for connection to LDAP server.")
  public IntegerConfigItem getLdapTimeout() {
    return ldapTimeout;
  }

  public void setLdapTimeout(IntegerConfigItem ldapTimeout) {
    this.ldapTimeout = ldapTimeout;
  }

  public ConfigurationsResponse ldapGroupAttributeName(StringConfigItem ldapGroupAttributeName) {
    this.ldapGroupAttributeName = ldapGroupAttributeName;
    return this;
  }


  @Schema(description = "The attribute which is used as identity of the LDAP group, default is cn.")
  public StringConfigItem getLdapGroupAttributeName() {
    return ldapGroupAttributeName;
  }

  public void setLdapGroupAttributeName(StringConfigItem ldapGroupAttributeName) {
    this.ldapGroupAttributeName = ldapGroupAttributeName;
  }

  public ConfigurationsResponse ldapGroupBaseDn(StringConfigItem ldapGroupBaseDn) {
    this.ldapGroupBaseDn = ldapGroupBaseDn;
    return this;
  }


  @Schema(description = "The base DN to search LDAP group.")
  public StringConfigItem getLdapGroupBaseDn() {
    return ldapGroupBaseDn;
  }

  public void setLdapGroupBaseDn(StringConfigItem ldapGroupBaseDn) {
    this.ldapGroupBaseDn = ldapGroupBaseDn;
  }

  public ConfigurationsResponse ldapGroupSearchFilter(StringConfigItem ldapGroupSearchFilter) {
    this.ldapGroupSearchFilter = ldapGroupSearchFilter;
    return this;
  }


  @Schema(description = "The filter to search the ldap group.")
  public StringConfigItem getLdapGroupSearchFilter() {
    return ldapGroupSearchFilter;
  }

  public void setLdapGroupSearchFilter(StringConfigItem ldapGroupSearchFilter) {
    this.ldapGroupSearchFilter = ldapGroupSearchFilter;
  }

  public ConfigurationsResponse ldapGroupSearchScope(IntegerConfigItem ldapGroupSearchScope) {
    this.ldapGroupSearchScope = ldapGroupSearchScope;
    return this;
  }


  @Schema(description = "The scope to search ldap. '0-LDAP_SCOPE_BASE, 1-LDAP_SCOPE_ONELEVEL, 2-LDAP_SCOPE_SUBTREE'")
  public IntegerConfigItem getLdapGroupSearchScope() {
    return ldapGroupSearchScope;
  }

  public void setLdapGroupSearchScope(IntegerConfigItem ldapGroupSearchScope) {
    this.ldapGroupSearchScope = ldapGroupSearchScope;
  }

  public ConfigurationsResponse ldapGroupAdminDn(StringConfigItem ldapGroupAdminDn) {
    this.ldapGroupAdminDn = ldapGroupAdminDn;
    return this;
  }


  @Schema(description = "Specify the ldap group which have the same privilege with Harbor admin.")
  public StringConfigItem getLdapGroupAdminDn() {
    return ldapGroupAdminDn;
  }

  public void setLdapGroupAdminDn(StringConfigItem ldapGroupAdminDn) {
    this.ldapGroupAdminDn = ldapGroupAdminDn;
  }

  public ConfigurationsResponse oidcClientId(StringConfigItem oidcClientId) {
    this.oidcClientId = oidcClientId;
    return this;
  }


  @Schema(description = "The client id of the OIDC.")
  public StringConfigItem getOidcClientId() {
    return oidcClientId;
  }

  public void setOidcClientId(StringConfigItem oidcClientId) {
    this.oidcClientId = oidcClientId;
  }

  public ConfigurationsResponse oidcEndpoint(StringConfigItem oidcEndpoint) {
    this.oidcEndpoint = oidcEndpoint;
    return this;
  }


  @Schema(description = "The URL of an OIDC-complaint server, must start with 'https://'.")
  public StringConfigItem getOidcEndpoint() {
    return oidcEndpoint;
  }

  public void setOidcEndpoint(StringConfigItem oidcEndpoint) {
    this.oidcEndpoint = oidcEndpoint;
  }

  public ConfigurationsResponse oidcName(StringConfigItem oidcName) {
    this.oidcName = oidcName;
    return this;
  }


  @Schema(description = "The name of the OIDC provider.")
  public StringConfigItem getOidcName() {
    return oidcName;
  }

  public void setOidcName(StringConfigItem oidcName) {
    this.oidcName = oidcName;
  }

  public ConfigurationsResponse oidcScope(StringConfigItem oidcScope) {
    this.oidcScope = oidcScope;
    return this;
  }


  @Schema(description = "The scope sent to OIDC server during authentication, should be separated by comma. It has to contain “openid”, and “offline_access”. If you are using google, please remove “offline_access” from this field.")
  public StringConfigItem getOidcScope() {
    return oidcScope;
  }

  public void setOidcScope(StringConfigItem oidcScope) {
    this.oidcScope = oidcScope;
  }

  public ConfigurationsResponse oidcVerifyCert(BoolConfigItem oidcVerifyCert) {
    this.oidcVerifyCert = oidcVerifyCert;
    return this;
  }


  @Schema(description = "Whether verify your OIDC server certificate, disable it if your OIDC server is hosted via self-hosted certificate.")
  public BoolConfigItem getOidcVerifyCert() {
    return oidcVerifyCert;
  }

  public void setOidcVerifyCert(BoolConfigItem oidcVerifyCert) {
    this.oidcVerifyCert = oidcVerifyCert;
  }

  public ConfigurationsResponse projectCreationRestriction(StringConfigItem projectCreationRestriction) {
    this.projectCreationRestriction = projectCreationRestriction;
    return this;
  }


  @Schema(description = "This attribute restricts what users have the permission to create project.  It can be 'everyone' or 'adminonly'.")
  public StringConfigItem getProjectCreationRestriction() {
    return projectCreationRestriction;
  }

  public void setProjectCreationRestriction(StringConfigItem projectCreationRestriction) {
    this.projectCreationRestriction = projectCreationRestriction;
  }

  public ConfigurationsResponse quotaPerProjectEnable(BoolConfigItem quotaPerProjectEnable) {
    this.quotaPerProjectEnable = quotaPerProjectEnable;
    return this;
  }


  @Schema(description = "This attribute indicates whether quota per project enabled in harbor")
  public BoolConfigItem getQuotaPerProjectEnable() {
    return quotaPerProjectEnable;
  }

  public void setQuotaPerProjectEnable(BoolConfigItem quotaPerProjectEnable) {
    this.quotaPerProjectEnable = quotaPerProjectEnable;
  }

  public ConfigurationsResponse readOnly(BoolConfigItem readOnly) {
    this.readOnly = readOnly;
    return this;
  }


  @Schema(description = "'docker push' is prohibited by Harbor if you set it to true.   ")
  public BoolConfigItem getReadOnly() {
    return readOnly;
  }

  public void setReadOnly(BoolConfigItem readOnly) {
    this.readOnly = readOnly;
  }

  public ConfigurationsResponse selfRegistration(BoolConfigItem selfRegistration) {
    this.selfRegistration = selfRegistration;
    return this;
  }


  @Schema(description = "Whether the Harbor instance supports self-registration.  If it's set to false, admin need to add user to the instance.")
  public BoolConfigItem getSelfRegistration() {
    return selfRegistration;
  }

  public void setSelfRegistration(BoolConfigItem selfRegistration) {
    this.selfRegistration = selfRegistration;
  }

  public ConfigurationsResponse storagePerProject(IntegerConfigItem storagePerProject) {
    this.storagePerProject = storagePerProject;
    return this;
  }


  @Schema(description = "The default storage quota for the new created projects.")
  public IntegerConfigItem getStoragePerProject() {
    return storagePerProject;
  }

  public void setStoragePerProject(IntegerConfigItem storagePerProject) {
    this.storagePerProject = storagePerProject;
  }

  public ConfigurationsResponse tokenExpiration(IntegerConfigItem tokenExpiration) {
    this.tokenExpiration = tokenExpiration;
    return this;
  }


  @Schema(description = "The expiration time of the token for internal Registry, in minutes.")
  public IntegerConfigItem getTokenExpiration() {
    return tokenExpiration;
  }

  public void setTokenExpiration(IntegerConfigItem tokenExpiration) {
    this.tokenExpiration = tokenExpiration;
  }

  public ConfigurationsResponse verifyRemoteCert(BoolConfigItem verifyRemoteCert) {
    this.verifyRemoteCert = verifyRemoteCert;
    return this;
  }


  @Schema(description = "Whether or not the certificate will be verified when Harbor tries to access a remote Harbor instance for replication.")
  public BoolConfigItem getVerifyRemoteCert() {
    return verifyRemoteCert;
  }

  public void setVerifyRemoteCert(BoolConfigItem verifyRemoteCert) {
    this.verifyRemoteCert = verifyRemoteCert;
  }

  public ConfigurationsResponse scanAllPolicy(Object scanAllPolicy) {
    this.scanAllPolicy = scanAllPolicy;
    return this;
  }


  @Schema(description = "")
  public Object getScanAllPolicy() {
    return scanAllPolicy;
  }

  public void setScanAllPolicy(Object scanAllPolicy) {
    this.scanAllPolicy = scanAllPolicy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigurationsResponse configurationsResponse = (ConfigurationsResponse) o;
    return Objects.equals(this.authMode, configurationsResponse.authMode) &&
        Objects.equals(this.countPerProject, configurationsResponse.countPerProject) &&
        Objects.equals(this.emailFrom, configurationsResponse.emailFrom) &&
        Objects.equals(this.emailHost, configurationsResponse.emailHost) &&
        Objects.equals(this.emailPort, configurationsResponse.emailPort) &&
        Objects.equals(this.emailIdentity, configurationsResponse.emailIdentity) &&
        Objects.equals(this.emailUsername, configurationsResponse.emailUsername) &&
        Objects.equals(this.emailSsl, configurationsResponse.emailSsl) &&
        Objects.equals(this.emailInsecure, configurationsResponse.emailInsecure) &&
        Objects.equals(this.ldapUrl, configurationsResponse.ldapUrl) &&
        Objects.equals(this.ldapBaseDn, configurationsResponse.ldapBaseDn) &&
        Objects.equals(this.ldapFilter, configurationsResponse.ldapFilter) &&
        Objects.equals(this.ldapScope, configurationsResponse.ldapScope) &&
        Objects.equals(this.ldapUid, configurationsResponse.ldapUid) &&
        Objects.equals(this.ldapSearchDn, configurationsResponse.ldapSearchDn) &&
        Objects.equals(this.ldapTimeout, configurationsResponse.ldapTimeout) &&
        Objects.equals(this.ldapGroupAttributeName, configurationsResponse.ldapGroupAttributeName) &&
        Objects.equals(this.ldapGroupBaseDn, configurationsResponse.ldapGroupBaseDn) &&
        Objects.equals(this.ldapGroupSearchFilter, configurationsResponse.ldapGroupSearchFilter) &&
        Objects.equals(this.ldapGroupSearchScope, configurationsResponse.ldapGroupSearchScope) &&
        Objects.equals(this.ldapGroupAdminDn, configurationsResponse.ldapGroupAdminDn) &&
        Objects.equals(this.oidcClientId, configurationsResponse.oidcClientId) &&
        Objects.equals(this.oidcEndpoint, configurationsResponse.oidcEndpoint) &&
        Objects.equals(this.oidcName, configurationsResponse.oidcName) &&
        Objects.equals(this.oidcScope, configurationsResponse.oidcScope) &&
        Objects.equals(this.oidcVerifyCert, configurationsResponse.oidcVerifyCert) &&
        Objects.equals(this.projectCreationRestriction, configurationsResponse.projectCreationRestriction) &&
        Objects.equals(this.quotaPerProjectEnable, configurationsResponse.quotaPerProjectEnable) &&
        Objects.equals(this.readOnly, configurationsResponse.readOnly) &&
        Objects.equals(this.selfRegistration, configurationsResponse.selfRegistration) &&
        Objects.equals(this.storagePerProject, configurationsResponse.storagePerProject) &&
        Objects.equals(this.tokenExpiration, configurationsResponse.tokenExpiration) &&
        Objects.equals(this.verifyRemoteCert, configurationsResponse.verifyRemoteCert) &&
        Objects.equals(this.scanAllPolicy, configurationsResponse.scanAllPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authMode, countPerProject, emailFrom, emailHost, emailPort, emailIdentity, emailUsername, emailSsl, emailInsecure, ldapUrl, ldapBaseDn, ldapFilter, ldapScope, ldapUid, ldapSearchDn, ldapTimeout, ldapGroupAttributeName, ldapGroupBaseDn, ldapGroupSearchFilter, ldapGroupSearchScope, ldapGroupAdminDn, oidcClientId, oidcEndpoint, oidcName, oidcScope, oidcVerifyCert, projectCreationRestriction, quotaPerProjectEnable, readOnly, selfRegistration, storagePerProject, tokenExpiration, verifyRemoteCert, scanAllPolicy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigurationsResponse {\n");
    
    sb.append("    authMode: ").append(toIndentedString(authMode)).append("\n");
    sb.append("    countPerProject: ").append(toIndentedString(countPerProject)).append("\n");
    sb.append("    emailFrom: ").append(toIndentedString(emailFrom)).append("\n");
    sb.append("    emailHost: ").append(toIndentedString(emailHost)).append("\n");
    sb.append("    emailPort: ").append(toIndentedString(emailPort)).append("\n");
    sb.append("    emailIdentity: ").append(toIndentedString(emailIdentity)).append("\n");
    sb.append("    emailUsername: ").append(toIndentedString(emailUsername)).append("\n");
    sb.append("    emailSsl: ").append(toIndentedString(emailSsl)).append("\n");
    sb.append("    emailInsecure: ").append(toIndentedString(emailInsecure)).append("\n");
    sb.append("    ldapUrl: ").append(toIndentedString(ldapUrl)).append("\n");
    sb.append("    ldapBaseDn: ").append(toIndentedString(ldapBaseDn)).append("\n");
    sb.append("    ldapFilter: ").append(toIndentedString(ldapFilter)).append("\n");
    sb.append("    ldapScope: ").append(toIndentedString(ldapScope)).append("\n");
    sb.append("    ldapUid: ").append(toIndentedString(ldapUid)).append("\n");
    sb.append("    ldapSearchDn: ").append(toIndentedString(ldapSearchDn)).append("\n");
    sb.append("    ldapTimeout: ").append(toIndentedString(ldapTimeout)).append("\n");
    sb.append("    ldapGroupAttributeName: ").append(toIndentedString(ldapGroupAttributeName)).append("\n");
    sb.append("    ldapGroupBaseDn: ").append(toIndentedString(ldapGroupBaseDn)).append("\n");
    sb.append("    ldapGroupSearchFilter: ").append(toIndentedString(ldapGroupSearchFilter)).append("\n");
    sb.append("    ldapGroupSearchScope: ").append(toIndentedString(ldapGroupSearchScope)).append("\n");
    sb.append("    ldapGroupAdminDn: ").append(toIndentedString(ldapGroupAdminDn)).append("\n");
    sb.append("    oidcClientId: ").append(toIndentedString(oidcClientId)).append("\n");
    sb.append("    oidcEndpoint: ").append(toIndentedString(oidcEndpoint)).append("\n");
    sb.append("    oidcName: ").append(toIndentedString(oidcName)).append("\n");
    sb.append("    oidcScope: ").append(toIndentedString(oidcScope)).append("\n");
    sb.append("    oidcVerifyCert: ").append(toIndentedString(oidcVerifyCert)).append("\n");
    sb.append("    projectCreationRestriction: ").append(toIndentedString(projectCreationRestriction)).append("\n");
    sb.append("    quotaPerProjectEnable: ").append(toIndentedString(quotaPerProjectEnable)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    selfRegistration: ").append(toIndentedString(selfRegistration)).append("\n");
    sb.append("    storagePerProject: ").append(toIndentedString(storagePerProject)).append("\n");
    sb.append("    tokenExpiration: ").append(toIndentedString(tokenExpiration)).append("\n");
    sb.append("    verifyRemoteCert: ").append(toIndentedString(verifyRemoteCert)).append("\n");
    sb.append("    scanAllPolicy: ").append(toIndentedString(scanAllPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

