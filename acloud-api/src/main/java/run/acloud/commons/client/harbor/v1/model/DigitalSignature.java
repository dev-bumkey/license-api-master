/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;


@Schema(description = "The signature of the chart")
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T09:10:54.107Z")
public class DigitalSignature {
  @SerializedName("signed")
  private Boolean signed = null;

  @SerializedName("prov_file")
  private String provFile = null;

  public DigitalSignature signed(Boolean signed) {
    this.signed = signed;
    return this;
  }


  @Schema(description = "A flag to indicate if the chart is signed")
  public Boolean isSigned() {
    return signed;
  }

  public void setSigned(Boolean signed) {
    this.signed = signed;
  }

  public DigitalSignature provFile(String provFile) {
    this.provFile = provFile;
    return this;
  }


  @Schema(description = "The URL of the provance file")
  public String getProvFile() {
    return provFile;
  }

  public void setProvFile(String provFile) {
    this.provFile = provFile;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigitalSignature digitalSignature = (DigitalSignature) o;
    return Objects.equals(this.signed, digitalSignature.signed) &&
        Objects.equals(this.provFile, digitalSignature.provFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signed, provFile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigitalSignature {\n");
    
    sb.append("    signed: ").append(toIndentedString(signed)).append("\n");
    sb.append("    provFile: ").append(toIndentedString(provFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

