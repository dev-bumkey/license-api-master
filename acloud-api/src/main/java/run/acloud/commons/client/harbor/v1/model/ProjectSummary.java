/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 1.10.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v1.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;


@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-08T09:10:54.107Z")
public class ProjectSummary {
  @SerializedName("repo_count")
  private Integer repoCount = null;

  @SerializedName("chart_count")
  private Integer chartCount = null;

  @SerializedName("project_admin_count")
  private Integer projectAdminCount = null;

  @SerializedName("master_count")
  private Integer masterCount = null;

  @SerializedName("developer_count")
  private Integer developerCount = null;

  @SerializedName("guest_count")
  private Integer guestCount = null;

  @SerializedName("quota")
  private Object quota = null;

  public ProjectSummary repoCount(Integer repoCount) {
    this.repoCount = repoCount;
    return this;
  }


  @Schema(description = "The number of the repositories under this project.")
  public Integer getRepoCount() {
    return repoCount;
  }

  public void setRepoCount(Integer repoCount) {
    this.repoCount = repoCount;
  }

  public ProjectSummary chartCount(Integer chartCount) {
    this.chartCount = chartCount;
    return this;
  }


  @Schema(description = "The total number of charts under this project.")
  public Integer getChartCount() {
    return chartCount;
  }

  public void setChartCount(Integer chartCount) {
    this.chartCount = chartCount;
  }

  public ProjectSummary projectAdminCount(Integer projectAdminCount) {
    this.projectAdminCount = projectAdminCount;
    return this;
  }


  @Schema(description = "The total number of project admin members.")
  public Integer getProjectAdminCount() {
    return projectAdminCount;
  }

  public void setProjectAdminCount(Integer projectAdminCount) {
    this.projectAdminCount = projectAdminCount;
  }

  public ProjectSummary masterCount(Integer masterCount) {
    this.masterCount = masterCount;
    return this;
  }


  @Schema(description = "The total number of master members.")
  public Integer getMasterCount() {
    return masterCount;
  }

  public void setMasterCount(Integer masterCount) {
    this.masterCount = masterCount;
  }

  public ProjectSummary developerCount(Integer developerCount) {
    this.developerCount = developerCount;
    return this;
  }


  @Schema(description = "The total number of developer members.")
  public Integer getDeveloperCount() {
    return developerCount;
  }

  public void setDeveloperCount(Integer developerCount) {
    this.developerCount = developerCount;
  }

  public ProjectSummary guestCount(Integer guestCount) {
    this.guestCount = guestCount;
    return this;
  }


  @Schema(description = "The total number of guest members.")
  public Integer getGuestCount() {
    return guestCount;
  }

  public void setGuestCount(Integer guestCount) {
    this.guestCount = guestCount;
  }

  public ProjectSummary quota(Object quota) {
    this.quota = quota;
    return this;
  }


  @Schema(description = "")
  public Object getQuota() {
    return quota;
  }

  public void setQuota(Object quota) {
    this.quota = quota;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectSummary projectSummary = (ProjectSummary) o;
    return Objects.equals(this.repoCount, projectSummary.repoCount) &&
        Objects.equals(this.chartCount, projectSummary.chartCount) &&
        Objects.equals(this.projectAdminCount, projectSummary.projectAdminCount) &&
        Objects.equals(this.masterCount, projectSummary.masterCount) &&
        Objects.equals(this.developerCount, projectSummary.developerCount) &&
        Objects.equals(this.guestCount, projectSummary.guestCount) &&
        Objects.equals(this.quota, projectSummary.quota);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repoCount, chartCount, projectAdminCount, masterCount, developerCount, guestCount, quota);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectSummary {\n");
    
    sb.append("    repoCount: ").append(toIndentedString(repoCount)).append("\n");
    sb.append("    chartCount: ").append(toIndentedString(chartCount)).append("\n");
    sb.append("    projectAdminCount: ").append(toIndentedString(projectAdminCount)).append("\n");
    sb.append("    masterCount: ").append(toIndentedString(masterCount)).append("\n");
    sb.append("    developerCount: ").append(toIndentedString(developerCount)).append("\n");
    sb.append("    guestCount: ").append(toIndentedString(guestCount)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("}");
    return sb.toString();
  }


  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

