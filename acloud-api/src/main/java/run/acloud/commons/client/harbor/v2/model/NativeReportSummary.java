/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package run.acloud.commons.client.harbor.v2.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * The summary for the native report
 */
@Schema(description = "The summary for the native report")
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-22T08:06:19.711Z")
public class NativeReportSummary {
  @SerializedName("report_id")
  private String reportId = null;

  @SerializedName("scan_status")
  private String scanStatus = null;

  @SerializedName("severity")
  private String severity = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("summary")
  private VulnerabilitySummary summary = null;

  @SerializedName("start_time")
  private OffsetDateTime startTime = null;

  @SerializedName("end_time")
  private OffsetDateTime endTime = null;

  @SerializedName("complete_percent")
  private Integer completePercent = null;

  @SerializedName("scanner")
  private Scanner scanner = null;

  public NativeReportSummary reportId(String reportId) {
    this.reportId = reportId;
    return this;
  }

   /**
   * id of the native scan report
   * @return reportId
  **/
  @Schema(example = "5f62c830-f996-11e9-957f-0242c0a89008", description = "id of the native scan report")
  public String getReportId() {
    return reportId;
  }

  public void setReportId(String reportId) {
    this.reportId = reportId;
  }

  public NativeReportSummary scanStatus(String scanStatus) {
    this.scanStatus = scanStatus;
    return this;
  }

   /**
   * The status of the report generating process
   * @return scanStatus
  **/
  @Schema(example = "Success", description = "The status of the report generating process")
  public String getScanStatus() {
    return scanStatus;
  }

  public void setScanStatus(String scanStatus) {
    this.scanStatus = scanStatus;
  }

  public NativeReportSummary severity(String severity) {
    this.severity = severity;
    return this;
  }

   /**
   * The overall severity
   * @return severity
  **/
  @Schema(example = "High", description = "The overall severity")
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }

  public NativeReportSummary duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * The seconds spent for generating the report
   * @return duration
  **/
  @Schema(example = "300", description = "The seconds spent for generating the report")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public NativeReportSummary summary(VulnerabilitySummary summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @Schema(description = "")
  public VulnerabilitySummary getSummary() {
    return summary;
  }

  public void setSummary(VulnerabilitySummary summary) {
    this.summary = summary;
  }

  public NativeReportSummary startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The start time of the scan process that generating report
   * @return startTime
  **/
  @Schema(example = "2006-01-02T14:04:05Z", description = "The start time of the scan process that generating report")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public NativeReportSummary endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The end time of the scan process that generating report
   * @return endTime
  **/
  @Schema(example = "2006-01-02T15:04:05Z", description = "The end time of the scan process that generating report")
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public NativeReportSummary completePercent(Integer completePercent) {
    this.completePercent = completePercent;
    return this;
  }

   /**
   * The complete percent of the scanning which value is between 0 and 100
   * @return completePercent
  **/
  @Schema(example = "100", description = "The complete percent of the scanning which value is between 0 and 100")
  public Integer getCompletePercent() {
    return completePercent;
  }

  public void setCompletePercent(Integer completePercent) {
    this.completePercent = completePercent;
  }

  public NativeReportSummary scanner(Scanner scanner) {
    this.scanner = scanner;
    return this;
  }

   /**
   * Get scanner
   * @return scanner
  **/
  @Schema(description = "")
  public Scanner getScanner() {
    return scanner;
  }

  public void setScanner(Scanner scanner) {
    this.scanner = scanner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NativeReportSummary nativeReportSummary = (NativeReportSummary) o;
    return Objects.equals(this.reportId, nativeReportSummary.reportId) &&
        Objects.equals(this.scanStatus, nativeReportSummary.scanStatus) &&
        Objects.equals(this.severity, nativeReportSummary.severity) &&
        Objects.equals(this.duration, nativeReportSummary.duration) &&
        Objects.equals(this.summary, nativeReportSummary.summary) &&
        Objects.equals(this.startTime, nativeReportSummary.startTime) &&
        Objects.equals(this.endTime, nativeReportSummary.endTime) &&
        Objects.equals(this.completePercent, nativeReportSummary.completePercent) &&
        Objects.equals(this.scanner, nativeReportSummary.scanner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportId, scanStatus, severity, duration, summary, startTime, endTime, completePercent, scanner);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NativeReportSummary {\n");
    
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    scanStatus: ").append(toIndentedString(scanStatus)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    completePercent: ").append(toIndentedString(completePercent)).append("\n");
    sb.append("    scanner: ").append(toIndentedString(scanner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

